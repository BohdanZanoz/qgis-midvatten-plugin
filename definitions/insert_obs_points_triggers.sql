# -*- coding: utf-8 -*- This line is just for your information, the python plugin will not use the first line
CREATE TRIGGER IF NOT EXISTS "after_insert_obs_points_geom_fr_coords" AFTER INSERT ON "obs_points" WHEN (0 < (select count() from obs_points where ((NEW.east is not null) AND (NEW.north is not null) AND (NEW.geometry IS NULL)))) BEGIN UPDATE obs_points SET  geometry = MakePoint(NEW.east, NEW.north, (select srid from geometry_columns where f_table_name = 'obs_points')) WHERE (NEW.east is not null) AND (NEW.north is not null) AND (NEW.geometry IS NULL) AND (NEW.obsid = obsid); END;
CREATE TRIGGER IF NOT EXISTS "after_insert_obs_points_coords_fr_geom" AFTER INSERT ON "obs_points" WHEN (0 < (select count() from obs_points where ((NEW.east is null) AND (NEW.north is null) AND (NEW.geometry is not NULL)))) BEGIN UPDATE obs_points SET  east = X(geometry), north = Y(geometry) WHERE (NEW.east is null) AND (NEW.north is null) AND (NEW.geometry is not NULL) AND (NEW.obsid = obsid); END;
CREATE TRIGGER IF NOT EXISTS "after_update_obs_points_geom_fr_coords" AFTER UPDATE ON "obs_points" WHEN (0 < (select count() from obs_points where ((NEW.east != OLD.east) OR (NEW.north != OLD.north)) OR (NEW.north IS NOT NULL AND OLD.north IS NULL) OR (NEW.east IS NOT NULL AND OLD.east IS NULL)) ) BEGIN UPDATE obs_points SET geometry = MakePoint(NEW.east, NEW.north, (select srid from geometry_columns where f_table_name = 'obs_points')) WHERE ((NEW.east != OLD.east) OR (NEW.north != OLD.north) OR (NEW.north IS NOT NULL AND OLD.north IS NULL) OR (NEW.east IS NOT NULL AND OLD.east IS NULL)) AND (NEW.obsid = obsid) AND (NEW.east is not null) AND (NEW.north is not null); END;
CREATE TRIGGER IF NOT EXISTS "after_update_obs_points_coords_fr_geom" AFTER UPDATE ON "obs_points" WHEN (0 < (select count() from obs_points where NEW.geometry != OLD.geometry) ) BEGIN UPDATE obs_points SET east = X(geometry), north = Y(geometry) WHERE (NEW.geometry != OLD.geometry) AND (NEW.obsid = obsid); END;
CREATE TRIGGER IF NOT EXISTS vw_ins_obs_points INSTEAD OF INSERT ON view_obs_points FOR EACH ROW BEGIN INSERT INTO obs_points (obsid, name, place, type, length, drillstop, diam, material, screen, capacity, drilldate, wmeas_yn, wlogg_yn, east, north, ne_accur, ne_source, h_toc, h_tocags, h_gs, h_accur, h_syst, h_source, source, com_onerow, com_html, geometry)   VALUES (NEW.obsid, NEW.name, NEW.place, NEW.type, NEW.length, NEW.drillstop, NEW.diam, NEW.material, NEW.screen, NEW.capacity, NEW.drilldate, NEW.wmeas_yn, NEW.wlogg_yn, NEW.east, NEW.north, NEW.ne_accur, NEW.ne_source, NEW.h_toc, NEW.h_tocags, NEW.h_gs, NEW.h_accur, NEW.h_syst, NEW.h_source, NEW.source, NEW.com_onerow, NEW.com_html, NEW.geometry); END;
CREATE TRIGGER IF NOT EXISTS vw_upd_obs_points INSTEAD OF UPDATE ON view_obs_points FOR EACH ROW BEGIN UPDATE obs_points SET obsid = NEW.obsid, name = NEW.name, place = NEW.place, type = NEW.type, length = NEW.length, drillstop = NEW.drillstop, diam = NEW.diam, material = NEW.material, screen = NEW.screen, capacity = NEW.capacity, drilldate = NEW.drilldate, wmeas_yn = NEW.wmeas_yn, wlogg_yn = NEW.wlogg_yn, east = NEW.east, north = NEW.north, ne_accur = NEW.ne_accur, ne_source = NEW.ne_source, h_toc = NEW.h_toc, h_tocags = NEW.h_tocags, h_gs = NEW.h_gs, h_accur = NEW.h_accur, h_syst = NEW.h_syst, h_source = NEW.h_source, source = NEW.source, com_onerow = NEW.com_onerow, com_html = NEW.com_html, geometry = NEW.geometry WHERE rowid = OLD.rowid; END;
CREATE TRIGGER IF NOT EXISTS vw_del_obs_points INSTEAD OF DELETE ON view_obs_points BEGIN DELETE FROM obs_points WHERE rowid = OLD.rowid; END;